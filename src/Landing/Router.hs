module Landing.Router where


import Landing.Static as Static -- generated by Obelisk
import Lamarckian.Template
import Lamarckian.Render

--Routes Source
import Landing.MyShell
import Landing.Pages.Base
import Landing.Pages.AboutUs
import Landing.Pages.Pricing
import Landing.Pages.FAQ
import Landing.Pages.For.Bootcamps
import Landing.Pages.For.Communities
import Landing.Pages.For.JobSeekers
import Landing.Pages.For.Recruiters

import Common.Route
import Obelisk.Route
import Reflex.Dom.Core
import Language.Haskell.TH
import Data.ByteString as BS
import Data.Text as T

-- renderStaticHtml' :: R LandingRoute -> Q BS.ByteString 
-- renderStaticHtml' route = do
  
--   html <- staticRouter' route
--   pure $ "<!DOCTYPE html>" <> html

-- -- Helper func since we need the source to be ByteString
-- putDocType
--   :: R LandingRoute
--   -> (R LandingRoute -> Q BS.ByteString)
--   -> Q BS.ByteString
-- putDocType route router = do
--   html <- router route
--   pure $ "<!DOCTYPE html>" <> html
  
-- far more generic 
staticRouter :: R LandingRoute -> Q BS.ByteString
staticRouter = \case
  LandingBase :/ _ -> do
    renderInMainShell landingBase
  AboutUs :/ () -> renderInMainShell aboutUs
  Pricing :/ () -> renderInMainShell pricingPage
  FAQ :/ () -> renderInMainShell faq
  ForTalent :/ () -> renderInMainShell landingJobSeekers 
  SolutionFor :/ solRoute -> case solRoute of -- subRoute_ $ \case 
    Bootcamps :/ () -> renderInMainShell landingBootcamps
    Recruiters :/ () -> renderInMainShell landingRecruiters
    Communities :/ () -> renderInMainShell landingCommunities
    JobSeekers :/ () -> renderInMainShell landingJobSeekers
  Blog :/ blogRoute -> case blogRoute of
    BlogMain :/ () -> do
      mappy <- readFileToTemplateKey' slotKey $(staticFilePath "html/landing/Blog/README.md.html")
      renderStaticTemplate' mappy $ blogShell $ elClass "div" "containerBlog" $ templateSlot $ T.pack slotKey
    README :/ () -> do
      mappy <- readFileToTemplateKey' slotKey $(staticFilePath "html/landing/Blog/README.md.html")
      renderStaticTemplate' mappy $ blogShell $ elClass "div" "containerBlog" $ templateSlot $ T.pack slotKey        
    SetupInstructions :/ () -> do 
      mappy <- readFileToTemplateKey' slotKey $(staticFilePath "html/landing/Blog/SetupInstructions.md.html")
      renderStaticTemplate' mappy $ blogShell $ elClass "div" "containerBlog" $ templateSlot $ T.pack slotKey      
    Introduction :/ () -> do
      mappy <- readFileToTemplateKey' slotKey $(staticFilePath "html/landing/Blog/Introduction.md.html")
      renderStaticTemplate' mappy $ blogShell $ elClass "div" "containerBlog" $ templateSlot $ T.pack slotKey
    FirstProgram :/ () -> do
      mappy <- readFileToTemplateKey' slotKey $(staticFilePath "html/landing/Blog/FirstProgram.md.html")
      renderStaticTemplate' mappy $ blogShell $ elClass "div" "containerBlog" $ templateSlot $ T.pack slotKey
    Chapter0 :/ () -> do 
      mappy <- readFileToTemplateKey' slotKey $(staticFilePath "html/landing/Blog/Chapter0.md.html")
      renderStaticTemplate' mappy $ blogShell $ elClass "div" "containerBlog" $ templateSlot $ T.pack slotKey            
    Chapter1 :/ () -> do 
      mappy <- readFileToTemplateKey' slotKey $(staticFilePath "html/landing/Blog/Chapter1.md.html")
      renderStaticTemplate' mappy $ blogShell $ elClass "div" "containerBlog" $ templateSlot $ T.pack slotKey
    Chapter2 :/ () -> do 
      mappy <- readFileToTemplateKey' slotKey $(staticFilePath "html/landing/Blog/Chapter2.md.html")
      renderStaticTemplate' mappy $ blogShell $ elClass "div" "containerBlog" $ templateSlot $ T.pack slotKey
    Chapter3 :/ () -> do 
      mappy <- readFileToTemplateKey' slotKey $(staticFilePath "html/landing/Blog/Chapter3.md.html")
      renderStaticTemplate' mappy $ blogShell $ elClass "div" "containerBlog" $ templateSlot $ T.pack slotKey            
    Chapter4 :/ () -> do 
      mappy <- readFileToTemplateKey' slotKey $(staticFilePath "html/landing/Blog/Chapter4.md.html")
      renderStaticTemplate' mappy $ blogShell $ elClass "div" "containerBlog" $ templateSlot $ T.pack slotKey      
    Chapter5 :/ () -> do 
      mappy <- readFileToTemplateKey' slotKey $(staticFilePath "html/landing/Blog/Chapter5.md.html")
      renderStaticTemplate' mappy $ blogShell $ elClass "div" "containerBlog" $ templateSlot $ T.pack slotKey      
    Chapter6 :/ () -> do 
      mappy <- readFileToTemplateKey' slotKey $(staticFilePath "html/landing/Blog/Chapter6.md.html")
      renderStaticTemplate' mappy $ blogShell $ elClass "div" "containerBlog" $ templateSlot $ T.pack slotKey            
    Chapter7 :/ () -> do 
      mappy <- readFileToTemplateKey' slotKey $(staticFilePath "html/landing/Blog/Chapter7.md.html")
      renderStaticTemplate' mappy $ blogShell $ elClass "div" "containerBlog" $ templateSlot $ T.pack slotKey            
    Chapter8 :/ () -> do 
      mappy <- readFileToTemplateKey' slotKey $(staticFilePath "html/landing/Blog/Chapter8.md.html")
      renderStaticTemplate' mappy $ blogShell $ elClass "div" "containerBlog" $ templateSlot $ T.pack slotKey            
    Chapter9 :/ () -> do
      mappy <- readFileToTemplateKey' slotKey $(staticFilePath "html/landing/Blog/Chapter9.md.html")-- "html/landing/Blog/Chapter9.md.html"
      renderStaticTemplate' mappy $ blogShell $ elClass "div" "containerBlog" $ templateSlot $ T.pack slotKey      
       
